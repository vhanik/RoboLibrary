{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","typing","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","lenght","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgBeA,EAbF,SAACC,GACb,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACC,sBAAKC,UAAU,qDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CACCR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,cCCRU,EAbG,SAAC,GAA4B,EAA1BC,YAA2B,IAAdC,EAAa,EAAbA,OACjC,OACC,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,wDACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCGI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCtB,EAAMuB,YC2CMC,E,kDAzCd,aAAgB,IAAD,8BACd,gBAkCDP,SAAW,SAACQ,GACX,EAAKC,SAAS,CAAEb,YAAaY,EAAME,OAAOC,SAlC1C,EAAKC,MAAQ,CACZrB,OAAQ,GACRK,YAAa,IAJA,E,qDAQhB,WAAsB,IAAD,OACpBiB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAElB,OAAQ0B,S,oBAGxC,WAAW,IAAD,OACHC,EAAiBC,KAAKP,MAAMrB,OAAO6B,QAAO,SAAAC,GAC9C,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS,EAAKX,MAAMhB,YAAY0B,kBAElE,OAAiC,IAA7BH,KAAKP,MAAMrB,OAAOiC,OACd,yCAIN,sBAAKrC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,OAAQsB,KAAKnB,WACvB,cAAC,EAAD,UACA,cAAC,EAAD,CAAUT,OAAQ2B,a,GA5BNO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9510b39d.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = (props) => {\n\tconst { name, email, id } = props;\n\treturn (\n\t\t<div className='bg-light-blue dib br3 pa0 ma2 grow bw2 shadow-5 tc'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?150x150`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}\n \nexport default Card","import React from 'react';\nimport Card from './Card';\n\n\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div> \n\t);\n\n}\n\n\nexport default CardList\n\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, typing }) => {\n\treturn (\n\t\t<div className='pa3'>\n\t\t<input\n\t\tclassName='input-reset ba b--black-20 bw2 pa2 mb2 db w-50 center' \n\t\ttype='search' \n\t\tplaceholder='Search robots' \n\t\tonChange={typing} \n\t\t/>\t\t\n\t\t</div>\n\t);\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '600px' }}>\n\t\t{props.children}\n\t\t</div>\n\t\t\t)\n}\n\nexport default Scroll ","import React, { Component } from 'react'\nimport CardList from './CardList'\nimport SearchBox from './SearchBox'\nimport Scroll from './Scroll'\n\n\nclass App extends Component {\n\tconstructor () {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\ncomponentDidMount () {\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t.then(response => response.json())\n\t.then(users => {this.setState({ robots: users})});\n}\n\n\trender () {\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\t\tif (this.state.robots.lenght === 0) {\n\t\t\treturn <h1>Loading</h1>\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox typing={this.onChange} />\n\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t);\n\t\t}\n\t}\n\t\n\n\tonChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t\t\t\n\t}\n}\n \nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}